// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Post {
  id        Int     @id @default(autoincrement())
  title     String
  subtitle  String
  content   String?
  published Boolean @default(false)
  author    User?   @relation(fields: [authorId], references: [id])
  authorId  Int? @map("author_id")

  @@map(name: "post")
}

model User {
  id        Int      @id @default(autoincrement())
  dodId     String?  @unique
  name      String?
  email     String?  @unique
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  posts     Post[]
  role      Role2?

  //Model = User, TableName = users
  @@map(name: "user")
}

model Role {
  id              Int            @id @default(autoincrement())
  name            String
  resources        Resource[]

  @@map(name: "role")

}

model Resource {
  id          Int          @id @default(autoincrement())
  name        String
  permissions Permission[]
  Role        Role?  @relation(fields: [roleId], references: [id])
  roleId      Int? @map("role_id")

  @@map(name: "resource")

}

model Permission {
  id         Int       @id @default(autoincrement())
  name       String
  attributes String[]
  Resource   Resource? @relation(fields: [resourceId], references: [id])
  resourceId Int? @map("resource_id")

  @@map(name: "permission")

}

model AccessControl2 {
  id Int @id @default(autoincrement())
  role String
  resource String
  action String
  attributes String

  @@map(name: "accesscontrol2")

}

model Role2 {
  id              Int            @id @default(autoincrement())
  name            String
  AccessControl   AccessControl2? @relation(fields: [accessControlId], references: [id])
  accessControlId Int? @map("access_control_id")
  @@map(name: "role2")

}
